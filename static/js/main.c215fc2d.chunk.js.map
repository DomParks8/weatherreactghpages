{"version":3,"sources":["App.js","index.js"],"names":["App","state","getTime","time","Moment","utcOffset","timezone","format","setState","getWeather","zipInput","document","getElementById","value","fetch","then","response","status","json","data","console","log","zip","temperature","main","temp","city","name","description","weather","Country","sys","country","catch","error","className","type","id","placeholder","maxLength","onClick","this","React","Component","ReactDOM","render","StrictMode"],"mappings":"sQAyEeA,G,iNApEbC,MAAQ,G,EACRC,QAAU,WACR,IAAMC,EAAOC,MACVC,UAAU,EAAKJ,MAAMK,SAAW,IAChCC,OAAO,UACV,EAAKC,SAAS,CACZL,KAAMA,K,EAGVM,WAAa,WACX,IAAIC,EAAWC,SAASC,eAAe,YAAYC,MACnDC,MACE,uDACEJ,EACA,6DAEDK,MAAK,SAACC,GACmB,MAApBA,EAASC,OAIbD,EAASE,OAAOH,MAAK,SAACI,GACpBC,QAAQC,IAAIF,GACZ,EAAKX,SAAS,CACZc,IAAKZ,EACLa,YAAaJ,EAAKK,KAAKC,KACvBC,KAAMP,EAAKQ,KACXC,YAAaT,EAAKU,QAAQ,GAAGD,YAC7BE,QAASX,EAAKY,IAAIC,QAClB1B,SAAUa,EAAKb,WAEjB,EAAKJ,aAbLkB,QAAQC,IAAI,gBAAkBL,EAASC,WAgB1CgB,OAAM,SAACC,GACNd,QAAQC,IAAI,a,uDAIhB,OACE,yBAAKc,UAAU,aACb,yBAAKA,UAAU,cACb,wBAAIA,UAAU,UAAd,0BAEF,yBAAKA,UAAU,WACb,2BACEC,KAAK,OACLC,GAAG,WACHF,UAAU,eACVG,YAAY,gBACZC,UAAU,MAEZ,4BAAQJ,UAAU,iBAAiBK,QAASC,KAAKhC,YAAjD,WAIF,yBAAK0B,UAAU,WACb,4BACGM,KAAKxC,MAAMyB,KADd,IACqBe,KAAKxC,MAAM6B,SAEhC,4BAAKW,KAAKxC,MAAMsB,YAAhB,WACA,4BAAKkB,KAAKxC,MAAM2B,aAChB,4BAAKa,KAAKxC,MAAME,Y,GA/DRuC,IAAMC,YCGxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFnC,SAASC,eAAe,U","file":"static/js/main.c215fc2d.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport Moment from \"moment\";\nimport \"moment-timezone\";\nclass App extends React.Component {\n  state = {};\n  getTime = () => {\n    const time = Moment()\n      .utcOffset(this.state.timezone / 60)\n      .format(\"h:mm a\");\n    this.setState({\n      time: time,\n    });\n  };\n  getWeather = () => {\n    let zipInput = document.getElementById(\"zipInput\").value;\n    fetch(\n      \"https://api.openweathermap.org/data/2.5/weather?zip=\" +\n        zipInput +\n        \",us&units=imperial&appid=a1e3df40f95c0b92d083b8a468d14883\"\n    )\n      .then((response) => {\n        if (response.status !== 200) {\n          console.log(\"Status Code: \" + response.status);\n          return;\n        }\n        response.json().then((data) => {\n          console.log(data);\n          this.setState({\n            zip: zipInput,\n            temperature: data.main.temp,\n            city: data.name,\n            description: data.weather[0].description,\n            Country: data.sys.country,\n            timezone: data.timezone,\n          });\n          this.getTime();\n        });\n      })\n      .catch((error) => {\n        console.log(\"Error\");\n      });\n  };\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"display-1 \">\n          <h1 className=\"Header\">Have a wonderful day.</h1>\n        </div>\n        <div className=\"display\">\n          <input\n            type=\"text\"\n            id=\"zipInput\"\n            className=\"search-input\"\n            placeholder=\"Enter Zipcode\"\n            maxLength=\"5\"\n          />\n          <button className=\"material-icons\" onClick={this.getWeather}>\n            search\n          </button>\n        </div>\n        <div className=\"display\">\n          <h6>\n            {this.state.city} {this.state.Country}\n          </h6>\n          <h6>{this.state.temperature} &#8457;</h6>\n          <h6>{this.state.description}</h6>\n          <h6>{this.state.time}</h6>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Moment from \"moment\";\nimport \"moment-timezone\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}